[workspace]
members = ["scan", "proxy", "common"]
default-members = ["scan"]
resolver = "2"

[workspace.package]
version = "0.7.0"
edition = "2021"
authors = ["Sharath Rajasekar <sharath@getjavelin.com>"]
repository = "https://github.com/getjavelin/ramparts"
keywords = ["mcp", "scanner", "cli", "llm", "security"]
categories = ["command-line-utilities", "network-programming"]

# Cargo-release configuration for semantic versioning
[workspace.metadata.release]
# Allow releases from main/master branch
allow-branch = ["main", "master"]
# Create git tags
tag = true
# Push to remote
push = true
# Tag name format
tag-name = "v{version}"
# Sign commits and tags
sign-commit = false
sign-tag = false

[workspace.dependencies]
# CLI argument parsing
clap = { version = "4.4", features = ["derive"] }

# Async runtime
tokio = { version = "1.35", features = ["full"] }

# HTTP client
reqwest = { version = "0.12", features = ["json", "rustls-tls", "stream"], default-features = false }

# Async streams
futures-util = "0.3"
futures = "0.3"

# JSON handling
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
schemars = "1"

# Logging
tracing = "0.1"
tracing-subscriber = { version = "0.3", features = ["env-filter"] }

# Error handling
anyhow = "1.0"
thiserror = "1.0"

# URL parsing
url = "2.4"

# Regular expressions for environment variable expansion
regex = "1.10"

# Time handling
chrono = { version = "0.4", features = ["serde"] }

# Table formatting for output
tabled = "0.20"

# Configuration
config = "0.14"

# Directory handling
dirs = "5.0"

# File pattern matching for dynamic YARA rules
glob = "0.3"

# Color output
colored = "2.0"
spinners = "4.1.1"

# Web framework for microservice
axum = { version = "0.7", features = ["macros"] }
tower-http = { version = "0.5", features = ["cors", "trace"] }
tower = "0.4"

# JSON-RPC handling for microservice
jsonrpc-core = "18.0"
yara-x = "1.4"

# Official Rust MCP SDK
# Official Rust MCP SDK (client + server)
# Enable server + macros and server stdio transport for MCP server implementation
rmcp = { version = "0.3.2", features = [
    "client",
    "server",
    "macros",
    "schemars",
    "reqwest",
    # client transports already used by scanner
    "transport-child-process",
    "transport-streamable-http-client",
    "transport-sse-client",
    "transport-worker",
    # server transports for MCP server (starting with stdio)
    "transport-io",
    # add SSE and streamable HTTP server transports
    "transport-sse-server",
    "transport-streamable-http-server",
    "transport-streamable-http-server-session"
] }

# Random number generation for request IDs
rand = "0.8"

# Additional dependencies for scan crate
async-recursion = "1.0"
async-trait = "0.1"
mime = "0.3"
tempfile = "3.8"
tokio-test = "0.4"
pulldown-cmark = "0.9"
base64 = "0.21"
flate2 = "1.0"
tar = "0.4"
which = "4.4"
local-ip-address = "0.5"
tokio-stream = "0.1"
http = "0.2"
http-body-util = "0.1"
hyper = "0.14"
hyper-util = "0.1"
walkdir = "2.3"
indicatif = "0.17"
uuid = { version = "1.6", features = ["v4", "serde"] }
